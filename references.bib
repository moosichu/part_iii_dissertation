
@article{Yuksel2007,
   author       = {Cem Yuksel and Donald H. House and John Keyser},
   title        = {Wave Particles},
   journal      = {ACM Transactions on Graphics (Proceedings of SIGGRAPH 2007)},
   year         = {2007},
   volume       = {26},
   number       = {3},
   articleno    = {99},
   location     = {San Diego, California},
   url          = {http://doi.acm.org/10.1145/1276377.1276501},
   doi          = {10.1145/1276377.1276501},
   acmid        = {1276501},
   publisher    = {ACM Press},
   address      = {New York, NY, USA},
}

@article{Theano2016,
    author = {{Theano Development Team}},
    title = "{Theano: A {Python} framework for fast computation of mathematical expressions}",
    journal = {arXiv e-prints},
    volume = {abs/1605.02688},
    primaryClass = "cs.SC",
    keywords = {Computer Science - Symbolic Computation, Computer Science - Learning, Computer Science - Mathematical Software},
    year = 2016,
    month = may,
    url = {http://arxiv.org/abs/1605.02688},
}

@misc{CParallel,
    title = {Working Draft, Technical Specification for C++ Extensions for Parallelism, Revision 1},
    year = 2014,
    author = {Jared Hoberock},
    url = {www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n3960.pdf},
}

@inproceedings{StamFiume1995,
    author={Stam,Jos and Fiume,Eugene},
    editor={ },
    year={1995},
    title={Depicting fire and other gaseous phenomena using diffusion processes},
    booktitle={Proceedings of the ACM SIGGRAPH Conference on Computer Graphics},
    pages={129-135},
    language={English},
    url={www.scopus.com},
}

@inproceedings{GPGPUTechniques2012,
    author={M. Joselli and J. Ricardo da Silva and M. Zamith and E. Clua and M. Pelegrino and E. Mendon√ßa},
    booktitle={2012 IEEE International Games Innovation Conference},
    title={Techniques for designing GPGPU games},
    year={2012},
    volume={},
    number={},
    pages={1-5},
    keywords={computer animation;computer games;graphics processing units;optimisation;parallel architectures;parallel programming;rendering (computer graphics);GPGPU game design;GPGPU game programing;GPU computing architecture;GPU-CPU communication;animation;characters artificial intelligence;digital games;modeling effects;nongraphics subtasks;optimization;physics simulation;rendering effects;Artificial intelligence;Computational modeling;Computer architecture;Data models;Games;Graphics processing unit;Physics;GPGPU;GPU Computing;digital games},
    doi={10.1109/IGIC.2012.6329853},
    ISSN={2166-6741},
    month={Sept},
}

@book{gameenginebook,
    author    = {Jason Gregory},
    title     = {Game Engine Architecture},
    edition   = {second},
    year      = {2014},
    publisher = {CRC Press},
    address   = {Boca Raton, Florida},
    isbn      = {9781466560017},
}

@misc{gamingmobydick,
   author      = {Zak Kotzer},
   title       = {Rendering Realistic Water Is Still Game Development's Moby Dick},
   year        = {2015},
   howpublished = {\url{http://motherboard.vice.com/read/rendering-realistic-water-is-still-game-developments-moby-dick}},
}

@misc{Vulkan,
    title = {Vulkan},
    howpublished = {\url{https://www.khronos.org/vulkan/}},
}

@misc{SPIR-V,
    title = {SPIR-V},
    howpublished = {\url{https://www.khronos.org/spir/}},
}

@misc{DSL1,
    author = {Eric Holk},
    title = {Harlan},
    howpublished = {\url{https://github.com/eholk/harlan}}
}

@misc{DSL2,
    title = {Halide},
    howpublished = {\url{http://halide-lang.org/}},
}

@misc{CAMP,
    title = {C++ AMP},
    howpublished = {\url{https://msdn.microsoft.com/en-us/library/hh265137.aspx}}
}


@inbook{JCUDA2009,
    author="Yan, Yonghong
    and Grossman, Max
    and Sarkar, Vivek",
    title="JCUDA: A Programmer-Friendly Interface for Accelerating Java Programs with CUDA",
    bookTitle="Euro-Par 2009 Parallel Processing: 15th International Euro-Par Conference, Delft, The Netherlands, August 25-28, 2009. Proceedings",
    year="2009",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="887--899",
    abstract="A recent trend in mainstream desktop systems is the use of general-purpose graphics processor units (GPGPUs) to obtain order-of-magnitude performance improvements. CUDA has emerged as a popular programming model for GPGPUs for use by C/C++ programmers. Given the widespread use of modern object-oriented languages with managed runtimes like Java and C{\#}, it is natural to explore how CUDA-like capabilities can be made accessible to those programmers as well. In this paper, we present a programming interface called JCUDA that can be used by Java programmers to invoke CUDA kernels. Using this interface, programmers can write Java codes that directly call CUDA kernels, and delegate the responsibility of generating the Java-CUDA bridge codes and host-device data transfer calls to the compiler. Our preliminary performance results show that this interface can deliver significant performance improvements to Java programmers. For future work, we plan to use the JCUDA interface as a target language for supporting higher level parallel programming languages like X10 and Habanero-Java.",
    isbn="978-3-642-03869-3",
    doi="10.1007/978-3-642-03869-3_82",
    url="https://doi.org/10.1007/978-3-642-03869-3_82"
}



@article{Lime2012,
    author = {Dubach, Christophe and Cheng, Perry and Rabbah, Rodric and Bacon, David F. and Fink, Stephen J.},
    title = {Compiling a High-level Language for GPUs: (via Language Support for Architectures and Compilers)},
    journal = {SIGPLAN Not.},
    issue_date = {June 2012},
    volume = {47},
    number = {6},
    month = jun,
    year = {2012},
    issn = {0362-1340},
    pages = {1--12},
    numpages = {12},
    url = {http://doi.acm.org/10.1145/2345156.2254066},
    doi = {10.1145/2345156.2254066},
    acmid = {2254066},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {gpu, java, lime, map, opencl, reduce, streaming},
}

@article{Lime2010,
    author = {Auerbach, Joshua and Bacon, David F. and Cheng, Perry and Rabbah, Rodric},
    title = {Lime: A Java-compatible and Synthesizable Language for Heterogeneous Architectures},
    journal = {SIGPLAN Not.},
    issue_date = {October 2010},
    volume = {45},
    number = {10},
    month = oct,
    year = {2010},
    issn = {0362-1340},
    pages = {89--108},
    numpages = {20},
    url = {http://doi.acm.org/10.1145/1932682.1869469},
    doi = {10.1145/1932682.1869469},
    acmid = {1869469},
    publisher = {ACM},
    address = {New York, NY, USA},
    keywords = {fpga, functional programming, high level synthesis, object oriented, reconfigurable architecture, streaming, value type},
}

@misc{SYCL,
    title = {SYCL},
    howpublished = {\url{https://www.khronos.org/sycl}},
}

@misc{HCC,
    title = {HCC},
    howpublished = {\url{https://github.com/RadeonOpenCompute/hcc}},
}


@misc{CAMPFail1,
    title = {C++ AMP vs compute shaders for games?},
    howpublished = {\url{https://www.reddit.com/r/cpp/comments/2yjmx1/c_amp_vs_compute_shader_for_games/}}
}

@misc{CAMPFail2,
    title = {What is the current status of C++ AMP},
    howpublished = {\url{https://stackoverflow.com/questions/34969287/what-is-the-current-status-of-c-amp}}
}

@misc{OpenGLWorkings,
    title = {OpenGL Shader Compilation},
    howpublished = {\url{https://www.khronos.org/opengl/wiki/Shader_Compilation}},
}


@misc{DirectXWorkings,
    title = {Programming Guide for HLSL},
    howpublished = {\url{https://msdn.microsoft.com/en-us/library/windows/desktop/bb509635(v=vs.85).aspx}},
}

@misc{FNVHash,
    title = {FNV Hash},
    howpublished = {\url{http://isthe.com/chongo/tech/comp/fnv/}},
}

@misc{TODO,
    title = {TODO citation},
}